# Compose fileのバージョン指定
version: '3'
# どんなコンテナを立ち上げるか
services:
  # laravelを動かすコンテナ
  # サービス名はapp
  dev-laravel-docker-app:
    # リバースプロキシの割り振り先
    # サブドメインを振り分けるのを忘れずに
    environment: 
      VIRTUAL_HOST: docker1.sgx.jp
    # 先ほど作ったDockerfileを使って、コンテナをビルドするという指定
    build: ./docker_settings/app
    # コンテナの名前を指定
    container_name: dev-laravel-docker-app
    # コンテナとホスト側のディレクトリを動悸する場所の指定。laravelのソースが入る予定の場所
    volumes: 
      - ./src:/var/www/html
    networks: 
      - front_bridge

  # MySQLを動かすコンテナ
  # サービス名はdb
  dev-laravel-docker-db:
    # Docker HubからMySQL5.7の公式イメージをダウンロードしてくる指定
    image: mysql:5.7
    # コンテナ名はdev-laravel-test-db
    container_name: dev-laravel-docker-db
    # コンテナ内の環境変数を指定。
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_pass
      TZ: 'Asia/Tokyo'
    # 起動時のコマンド
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    # ディレクトリ同期。設定ファイルとMySQLのデータが保存される場所を同期している。コンテナは基本的に起動時に変更されてもコンテナ自体が止まるとデータが消えてしまうため、保存しておきたいものはホストマシンと同期しておく必要がある。
    volumes:
      - ./docker_settings/db/data:/var/lib/mysql
      - ./docker_settings/db/my.cnf:/etc/mysql/conf.d/my.cnf
    # ポート
    ports:
      - 3307:3306

networks:
  front_bridge:
    external: true
